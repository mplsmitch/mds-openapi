title: models/policy-rule
description: An individual rule in a policy.
type: object

x-stoplight:
  id: dvai555b3tcm8

additionalProperties: false
required:
  - name
  - rule_id
  - rule_type
  - geographies
  - states

$defs:
  states:
    type: object
    description: Vehicle state to which this rule applies. Optionally provide a list of specific vehicle events as a subset of a given state for the rule to apply to. An empty list or null/absent defaults to "all" for the state.
    propertyNames:
      # allow any vehicle state to be a property name
      $ref: ./data-types/vehicle-state.yaml
    patternProperties:
      ".": # i.e. match all properties of the `states` object
        type: array
        uniqueItems: true
        items:
          $ref: ./data-types/event-type.yaml

properties:
  name:
    $ref: ./data-types/string.yaml
    description: Name of rule
  rule_id:
    $ref: ./data-types/uuid.yaml
    description: Unique ID of rule
  rule_type:
    type: string
    description: The type of rule
  geographies:
    $ref: ./data-types/uuid-array.yaml
    description: List of Geography UUIDs (non-overlapping) specifying the covered geography.
    minItems: 1
  states:
    $ref: "#/$defs/states"
  rule_units:
    type:
      - string
      - "null"
    description: Measured units of policy
  vehicle_types:
    $ref: ./data-types/vehicle-type-array.yaml
    description: Applicable vehicle types, default "all"
  propulsion_types:
    $ref: ./data-types/propulsion-type-array.yaml
    description: Applicable vehicle propulsion types, default "all"
  minimum:
    type:
      - "null"
      - integer
    description: Minimum value, if applicable (default 0)
    default: 0
  maximum:
    type:
      - "null"
      - integer
    description: Maximum value, if applicable (default unlimited)
  inclusive_minimum:
    type:
      - "null"
      - boolean
    description: Whether the rule minimum is considered in-bounds (default true)
    default: true
  inclusive_maximum:
    type:
      - "null"
      - boolean
    description: Whether the rule maximum is considered in-bounds (default true)
    default: true
  rate_amount:
    type:
      - "null"
      - integer
    description: The amount of the rate.
  rate_recurrence:
    type:
      - "null"
      - string
    description: Recurrence of the rate
  rate_applies_when:
    type:
      - "null"
      - string
    description: Specifies when a rate is applied to a rule (defaults to `out_of_bounds`).
    enum:
      - in_bounds
      - out_of_bounds
    default: out_of_bounds
  start_time:
    $ref: ./data-types/iso-time.yaml
    description: Beginning time-of-day when the rule is in effect (default 00:00:00)
    default: "00:00:00"
  end_time:
    $ref: ./data-types/iso-time.yaml
    description: Ending time-of-day when the rule is in effect (default 23:59:59)
    default: "23:59:59"
  days:
    $ref: ./data-types/days.yaml
    description: Days when the rule is in effect (default all)
  messages:
    type:
      - "null"
      - object
    description: Message to rider user, if desired, in various languages, keyed by [BCP 47](https://www.rfc-editor.org/rfc/bcp/bcp47.txt) language tag.
    propertyNames:
      $ref: ./data-types/language-tag.yaml
    examples:
      - "en-US": "Remember to stay under 10 MPH on Venice Beach on weekends!"
        "es-US": "Â¡Recuerda mantener por debajo 10 millas por hora en Venice Beach los fines de semana!"
  value_url:
    type:
      - "null"
      - string
    description: URL to an API endpoint that can provide dynamic information for the measured value
    format: uri

oneOf:
  - title: Device count rule
    required:
      - rule_units
    properties:
      rule_type:
        const: count
      rule_units:
        type: string
        const: devices
      rate_recurrence:
        enum:
          - once_on_match
          - once_on_unmatch
  - title: Speed rule
    required:
      - rule_units
    properties:
      rule_type:
        const: speed
      rule_units:
        type: string
        enum:
          - mph
          - kph
      rate_recurrence:
        enum:
          - once_on_match
          - once_on_unmatch
  - title: Time rule
    required:
      - rule_units
    properties:
      rule_type:
        const: time
      rule_units:
        type: string
        enum:
          - seconds
          - minutes
          - hours
          - days
      rate_recurrence:
        enum:
          - each_time_unit
          - per_complete_time_unit
  - title: User rule
    properties:
      rule_type:
        const: user
      rule_units:
        type: "null"
      rate_amount:
        type: "null"
      rate_recurrence:
        type: "null"
      rate_applies_when:
        type: "null"
